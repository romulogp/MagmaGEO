/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.hustik.magmageo.tela.relatorio;

import br.com.hustik.magmageo.database.BancoDeDados;
import br.com.hustik.magmageo.model.kml.KMLPolygon;
import br.com.hustik.magmageo.tela.MagmaGeo;
import java.awt.Color;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hustik
 */
public class RelatorioOcorrencias extends javax.swing.JDialog {

    private final Color opac100 = new Color(255, 0, 0);
    private final Color opac50  = new Color(255, 128, 128);
    private final Color opac25  = new Color(255, 192, 192);
    private final Color opac0   = new Color(255, 255, 255);
    private final MagmaGeo telaPrincipal;
    private final BancoDeDados bd;

    /**
     * Creates new form RelatorioOcorrencias
     *
     * @param parent
     * @param modal
     * @param telaPrinc
     * @param bd
     */
    public RelatorioOcorrencias(java.awt.Frame parent, boolean modal, MagmaGeo telaPrinc, BancoDeDados bd) {
        super(parent, modal);
        initComponents();
        pack();
        this.telaPrincipal = telaPrinc;
        this.bd = bd;
        visualizaTabelaPorcentagens();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonGerarKML = new javax.swing.JButton();
        jPanelTable3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableRelatorioOccorrencias = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Relatório de Ocorrências");

        jButtonGerarKML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/hustik/magmageo/icons/Report-Go-32.png"))); // NOI18N
        jButtonGerarKML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarKMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonGerarKML, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonGerarKML, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTableRelatorioOccorrencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bairro", "Porcentagem", "Tarja"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableRelatorioOccorrencias);

        javax.swing.GroupLayout jPanelTable3Layout = new javax.swing.GroupLayout(jPanelTable3);
        jPanelTable3.setLayout(jPanelTable3Layout);
        jPanelTable3Layout.setHorizontalGroup(
            jPanelTable3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTable3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTable3Layout.setVerticalGroup(
            jPanelTable3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelTable3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelTable3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGerarKMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarKMLActionPerformed
        String kmlHeader = ""
                + "<?xml version=\"1.0\" encoding=\"UTF-8\"?><kml\r\n"
                + "    xmlns=\"http://earth.google.com/kml/2.0\">\r\n"
                + "    <Document>\r\n"
                + "        <Folder>\r\n"
                + "             <name>Ocorrencias em Bairros</name>\r\n"
                + "             <visibility>0</visibility>\r\n";            

        String kmlFooter = ""
                + "        </Folder>\r\n"
                + "    </Document>\r\n"
                + "</kml>\r\n";

        String kmlBody = "";
        ArrayList<KMLPolygon> lista = bd.obterKMLDosBairros();
        for (KMLPolygon poly : lista) {
            String cor;
            if (poly.getPercentual() > 50) {
                cor = "ff0000";
            } else if (poly.getPercentual() > 25) {
                cor = "ff8080";
            } else if (poly.getPercentual() > 0) {
                cor = "ffc0c0";
            } else {
                cor = "ffffff";
            }
            
            kmlBody += "\r\n"
                    + "             <Placemark>\r\n\t\t"
                    + poly.getKML()
                    + "                 <Style>\r\n"
                    + "                     <PolyStyle>\r\n"
                    + "                         <color>" + cor + "</color>\r\n"
                    + "                         <colorMode>normal</colorMode>\r\n"
                    + "                         <fill>1</fill>\r\n"
                    + "                         <outline>0</outline>\r\n"
                    + "                     </PolyStyle>\r\n"
                    + "                 </Style>\r\n"
                    + "             </Placemark>\r\n";
        }
                                   
        String kmlDocument = kmlHeader + kmlBody + kmlFooter;
        System.out.println("KML " + kmlDocument);

        salvaEmArquivo(kmlDocument);
    }//GEN-LAST:event_jButtonGerarKMLActionPerformed

    private void visualizaTabelaPorcentagens() {
        System.out.println("Atualizando tabela de porcentagem de ocorrências...");
        DefaultTableModel model = new DefaultTableModel();
        model = bd.atualizaListaPercentualOcorrencia(model);
        jTableRelatorioOccorrencias.setModel(model);
    }

    public void salvaEmArquivo(String kml) {
        System.out.println("\nGravando...");

        String localArquivo = ""; //gera arquivo dentro da pasta do projeto
        String nomeArquivo = "KML.kml";
        String caminho = localArquivo + nomeArquivo;
        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream(caminho, false);
            fos.write(kml.getBytes()); //Escreve no objeto
            fos.flush(); //Persiste no arquivo
        } catch (Exception e) {

        } finally {
            //try catch para tratar exclusivamente o método close.
            try {
                //Fecha o arquivo (esta ação É necessária e deverá ser 
                //executada não importa que exceções ocorram)
                fos.close();
            } catch (Exception ex) {
                //Erro no fechamento do arquivo. Não há porque subir esta exceção... Apenas trate-a
            }
        }
        abreNotepad(caminho);
    }

    public void abreNotepad(String caminho) {
        String command = "notepad.exe '" + caminho;
        try {
            Runtime r = Runtime.getRuntime();
            r.exec(command);
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGerarKML;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelTable3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableRelatorioOccorrencias;
    // End of variables declaration//GEN-END:variables
}
